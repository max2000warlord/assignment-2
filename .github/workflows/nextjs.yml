name: Build and Deploy Next.js Site with Bun to GitHub Pages

on:
  push:
    branches: [master]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      # Cache Bun's package cache (Linux: ~/.cache/bun)
      - name: Restore Bun cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ~/.cache/bun
          key: bun-cache-${{ runner.os }}-v1-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            bun-cache-${{ runner.os }}-v1-

      - name: Check if node_modules exists
        id: check-nm
        run: echo "exists=$(test -d node_modules && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

      - name: Restore node_modules
        if: steps.check-nm.outputs.exists == 'true'
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-bun-v1-${{ hashFiles('bun.lockb') }}

      # Cache node_modules (invalidate when lockfile changes)
      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-bun-v1-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            node-modules-${{ runner.os }}-bun-v1-

      - name: Install dependencies
        run: bun install --frozen-lockfile
        env:
          # avoid extra noise during CI
          CI: true

      # Cache Next.js build cache to speed up subsequent `next build`
      - name: Restore Next.js build cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-cache-${{ runner.os }}-v1-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            next-cache-${{ runner.os }}-v1-

      - name: Build site
        run: bun run build
        env:
          NEXT_DISABLE_ESLINT: "true"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: out
